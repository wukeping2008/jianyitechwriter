version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: jianyi-translator-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: jianyi-translator
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - jianyi-network

  # Redis缓存 (可选)
  redis:
    image: redis:7.2-alpine
    container_name: jianyi-translator-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jianyi-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jianyi-translator-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/jianyi-translator?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-production-jwt-secret-change-this
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./terminology:/app/terminology
    depends_on:
      - mongodb
      - redis
    networks:
      - jianyi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jianyi-translator-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - jianyi-network

  # Nginx反向代理 (生产环境)
  nginx:
    image: nginx:1.25-alpine
    container_name: jianyi-translator-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - jianyi-network
    profiles:
      - production

  # AI引擎服务 (可选，用于本地AI模型)
  ai-engine:
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    container_name: jianyi-translator-ai
    restart: unless-stopped
    environment:
      MODEL_PATH: /app/models
      CACHE_SIZE: 1000
    ports:
      - "8000:8000"
    volumes:
      - ./ai-engine/models:/app/models
      - ai_cache:/app/cache
    networks:
      - jianyi-network
    profiles:
      - ai-local
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  ai_cache:
    driver: local

networks:
  jianyi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
